http://www.cnblogs.com/dolphinX/p/3405335.html
WEBSQL已经过时，但几乎所有浏览器都支持了。。（安卓/IOS微信浏览器也支持）
IndexedDB 力推，但ios都不支持。。android支持也创建不来


http://html5test.com/测试浏览器是否自持html5功能
WEBSQL用法：
http://www.cnblogs.com/dolphinX/p/3405335.html
http://www.csdn.net/article/2012-10-23/2811083-HTML5-Web-SQL-Database-And-Indexed-Datab

IndexedDB 判断方式：
<script type="text/javascript">
var indexedDB = window.indexedDB || window.webkitIndexedDB || window.mozIndexedDB || window.msIndexedDB;

	if (!indexedDB) {
		window.alert("Your browser doesn't support a stable version of IndexedDB. Such and such feature will not be available.");
	}else{
		alert('支持indexedDB');
	//打开数据库
	// The version number is an unsigned long long number, which means that it can be a very big integer. It also means that you can't use a float, otherwise it will be converted to the closest lower integer and the transaction may not start, nor the upgradeneeded event trigger. So for example, don't use 2.4 as a version number
	var openRequest = indexedDB.open("test2",1);
	// success：打开成功。
	// error：打开失败。
	// upgradeneeded：第一次打开该数据库，或者数据库版本发生变化。
	// blocked：上一次的数据库连接还未关闭。
	var db;

	openRequest.onupgradeneeded = function(e) {
		alert("Upgrading...");
	}

	openRequest.onsuccess = function(e) {
		alert("Success!");
		db = e.target.result;
	}

	openRequest.onerror = function(e) {
		alert("Error"+e);
	}

}



</script>


websql示例：
<!DOCTYPE HTML>
<html>
<head>
    <title>Web SQL Database</title>
</head>
<body>
    <script type="text/javascript">
        var db = openDatabase('testDB', '1.0', 'Test DB', 2 * 1024 * 1024);
        var msg;
        /*db.transaction(function (context) {
           context.executeSql('CREATE TABLE IF NOT EXISTS testTable (id unique, name)');
           context.executeSql('INSERT INTO testTable (id, name) VALUES (0, "Byron")');
           context.executeSql('INSERT INTO testTable (id, name) VALUES (1, "Casper")');
           context.executeSql('INSERT INTO testTable (id, name) VALUES (2, "Frank")');
         });*/

        db.transaction(function (context) {
           context.executeSql('SELECT * FROM testTable', [], function (context, results) {
            var len = results.rows.length, i;
            alert('Got '+len+' rows.');
               for (i = 0; i < len; i++){
              alert('id: '+results.rows.item(i).id+' name: '+results.rows.item(i).name);
            }
         });
        });
    </script>
</body>
</html>

